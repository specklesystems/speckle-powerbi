let
    Speckle.Api.Fetch = Extension.LoadFunction("Api.Fetch.pqm"),
    Speckle.Log.Receive = Extension.LoadFunction("Log.Receive.pqm"),
    Extension.LoadFunction = (fileName as text) =>
        let
            binary = Extension.Contents(fileName), asText = Text.FromBinary(binary)
        in
            try
                Expression.Evaluate(asText, #shared) catch (e) =>
                    error
                        [
                            Reason = "Extension.LoadFunction Failure",
                            Message.Format = "Loading '#{0}' failed - '#{1}': '#{2}'",
                            Message.Parameters = {fileName, e[Reason], e[Message]},
                            Detail = [File = fileName, Error = e]
                        ]
in
    (server, streamId, commit) =>
        let
            query = "mutation($input: CommitReceivedInput!) {
            commitReceive(input: $input) 
        }",
            variables = [
                input = [
                    streamId = streamId,
                    commitId = commit[id],
                    sourceApplication = "PowerBI"
                ]
            ],
            s = Speckle.Log.Receive(server, commit)
        in
            // Read receipts should fail gracefully no matter what
            try Speckle.Api.Fetch(s, query, variables)[commitReceive] otherwise false
