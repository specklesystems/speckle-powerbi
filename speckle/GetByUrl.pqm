let
    Fetch = Extension.LoadFunction("Api.Fetch.pqm"),
    GetAllObjectChildren = Extension.LoadFunction("Api.GetAllObjectChildren.pqm"),
    GetObjectFromCommit = Extension.LoadFunction("GetObjectFromCommit.pqm"),
    GetObjectFromBranch = Extension.LoadFunction("GetObjectFromBranch.pqm"),
    CommitReceived = Extension.LoadFunction("Api.CommitReceived.pqm"),
    ParseStreamUrl = Extension.LoadFunction("ParseStreamUrl.pqm"),
    Extension.LoadFunction = (fileName as text) =>
        let
            binary = Extension.Contents(fileName), asText = Text.FromBinary(binary)
        in
            try
                Expression.Evaluate(asText, #shared) catch (e) =>
                    error
                        [
                            Reason = "Extension.LoadFunction Failure",
                            Message.Format = "Loading '#{0}' failed - '#{1}': '#{2}'",
                            Message.Parameters = {fileName, e[Reason], e[Message]},
                            Detail = [File = fileName, Error = e]
                        ]
in
    (url as text) as table =>
        let
            // Get server and streamId, and branchName / commitId / objectid from the input url
            stream = ParseStreamUrl(url),
            id = stream[id],
            server = stream[server],
            commitObjectsTable =
                if (stream[urlType] = "Commit") then
                    GetObjectFromCommit(server, id, stream[commit])
                else if (stream[urlType] = "Object") then
                    GetAllObjectChildren(server, id, stream[object])
                else if (stream[urlType] = "Branch") then
                    GetObjectFromBranch(server, id, stream[branch])
                else
                    GetObjectFromBranch(server, id, "main"),
            removeEmpty = Table.RemoveLastN(commitObjectsTable, 1),
            addStreamUrl = Table.AddColumn(removeEmpty, "Stream URL", each server & "/streams/" & id),
            addParentObjectId = Table.AddColumn(
                addStreamUrl, "Commit Object ID", each Value.Metadata(commitObjectsTable)[objectId]
            ),
            addUrlType = Table.AddColumn(addParentObjectId, "URL Type", each stream[urlType]),
            addObjectIdCol = Table.AddColumn(addUrlType, "Object ID", each try[data][id] otherwise null),
            addSpeckleTypeCol = Table.AddColumn(
                addObjectIdCol, "speckle_type", each try[data][speckle_type] otherwise null
            ),
            final = Table.ReorderColumns(
                addSpeckleTypeCol, {
                    "Stream URL",
                    "URL Type",
                    "Commit Object ID",
                    "Object ID",
                    "speckle_type",
                    "data"
                }
            )
        in
            final
