(url as text) as table =>
    let
        // import required functions
        GetStructuredData = Extension.LoadFunction("GetStructuredData.pqm"),
        SendToServer = Extension.LoadFunction("SendToServer.pqm"),
        GetModel = Extension.LoadFunction("GetModel.pqm"),

        // the logic for importing functions from other files
        Extension.LoadFunction = (fileName as text) =>
            let
                binary = Extension.Contents(fileName),
                asText = Text.FromBinary(binary)
            in
                try
                    Expression.Evaluate(asText, #shared)
                catch (e) =>
                    error
                        [
                            Reason = "Extension.LoadFunction Failure",
                            Message.Format = "Loading '#{0}' failed - '#{1}': '#{2}'",
                            Message.Parameters = {fileName, e[Reason], e[Message]},
                            Detail = [File = fileName, Error = e]
                        ],

        // get model name
        modelInfo = GetModel(url),
        modelName = modelInfo[modelName],

        // get sending status
        SendStatus = SendToServer(url),
        
        // get structured data
        StructuredData = GetStructuredData(url),

        // rename column based on send status
        NewColumnName = if SendStatus = "-" then "Viewer Data ID +" else "Viewer Data ID ?",
        Result = Table.RenameColumns(StructuredData, {{"Viewer Data ID", NewColumnName}})
    in
        Result