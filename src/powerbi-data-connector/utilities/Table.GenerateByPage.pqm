(getNextPage as function) as table =>
    let
        listOfPages = List.Generate(
            () => getNextPage(null),
            // get the first page of data
            (lastPage) => lastPage <> null,
            // stop when the function returns null
            (lastPage) => getNextPage(lastPage)
            // pass the previous page to the next function call
        ),
        // concatenate the pages together
        tableOfPages = Table.FromList(listOfPages, Splitter.SplitByNothing(), {"Column1"}),
        firstRow = tableOfPages{0} ?
    in
        // if we didn't get back any pages of data, return an empty table
        // otherwise set the table type based on the columns of the first page
        if (firstRow = null) then
            Table.FromRows({})
        else
            Value.ReplaceType(
                Table.ExpandTableColumn(tableOfPages, "Column1", Table.ColumnNames(firstRow[Column1])),
                Value.Type(firstRow[Column1])
            )
